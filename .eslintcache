[{"/Users/fadhilmi/Documents/ProgrammingProjects/rjs-frontend-test/src/components/Card.js":"1","/Users/fadhilmi/Documents/ProgrammingProjects/rjs-frontend-test/src/pages/Details/index.js":"2","/Users/fadhilmi/Documents/ProgrammingProjects/rjs-frontend-test/src/components/Comment.js":"3","/Users/fadhilmi/Documents/ProgrammingProjects/rjs-frontend-test/src/components/Search.js":"4","/Users/fadhilmi/Documents/ProgrammingProjects/rjs-frontend-test/src/pages/Home/index.js":"5"},{"size":654,"mtime":1606241020373,"results":"6","hashOfConfig":"7"},{"size":3948,"mtime":1606242448926,"results":"8","hashOfConfig":"7"},{"size":397,"mtime":1606241784721,"results":"9","hashOfConfig":"7"},{"size":631,"mtime":1606241824863,"results":"10","hashOfConfig":"7"},{"size":1585,"mtime":1606240682627,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"by39lv",{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/Users/fadhilmi/Documents/ProgrammingProjects/rjs-frontend-test/src/components/Card.js",["24"],"/Users/fadhilmi/Documents/ProgrammingProjects/rjs-frontend-test/src/pages/Details/index.js",["25","26","27","28","29"],"import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Comment from \"../../components/Comment\";\nimport Search from \"../../components/Search\";\nimport \"./index.css\";\n\nconst Details = ({ match }) => {\n  const { id } = match?.params;\n  const [data, setData] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [filterComments, setFilterComments] = useState([]);\n  const [isLiveSearch, setIsLiveSearch] = useState(false);\n  const [searching, setSearching] = useState(false);\n\n  const getData = async () => {\n    try {\n      const promise = await fetch(\n        `https://jsonplaceholder.typicode.com/posts/${id}`\n      );\n      if (promise?.status === 200) {\n        const results = await promise.json();\n        setData(results);\n      }\n    } catch (error) {\n      console.log(\"Details - getData() - error => \", error);\n    }\n  };\n\n  const getComments = async () => {\n    try {\n      const promise = await fetch(\n        `https://jsonplaceholder.typicode.com/comments?postId=${id}`\n      );\n      if (promise?.status === 200) {\n        const results = await promise.json();\n        setComments(results);\n      }\n    } catch (error) {\n      console.log(\"Details - getComments() - error => \", error);\n    }\n  };\n\n  const onSearchComments = () => {\n    setSearching(true);\n    if (searchValue && filterComments !== \"\") {\n      const filter = comments.filter(\n        (comment) =>\n          comment.name.toUpperCase().includes(searchValue.toUpperCase()) ||\n          comment.email.toUpperCase().includes(searchValue.toUpperCase()) ||\n          comment.body.toUpperCase().includes(searchValue.toUpperCase())\n      );\n      setFilterComments(filter);\n    } else {\n      setFilterComments(comments);\n    }\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getData();\n    getComments();\n  }, [id]);\n\n  useEffect(() => {\n    if (isLiveSearch) {\n      onSearchComments();\n    }\n  }, [searchValue]);\n\n  const onChange = (e) => {\n    e.preventDefault();\n    setSearchValue(e.target.value);\n  };\n\n  const onCheckLiveSearch = () => {\n    console.log(\"current => \", isLiveSearch);\n    setIsLiveSearch(!isLiveSearch);\n  };\n\n  const renderComment = (item, index) => {\n    const { email, name, body } = item;\n    return (\n      <Comment\n        email={email}\n        name={name}\n        body={body}\n        searchValue={searchValue}\n      />\n    );\n  };\n\n  const renderComments = () => {\n    const arr = filterComments?.length > 0 ? filterComments : comments;\n\n    return arr.map((item, index) => {\n      const { email, name, body } = item;\n      return (\n        <Comment\n          email={email}\n          name={name}\n          body={body}\n          searchValue={searchValue}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"details-container\">\n      <div className=\"details-card\">\n        <p className=\"details-title\">{data?.title}</p>\n        <p className=\"details-body\">{data?.body}</p>\n      </div>\n      <div className=\"search-header\">\n        <p className=\"search-title\">Comments</p>\n        <Search\n          onChange={onChange}\n          value={searchValue}\n          search={!isLiveSearch}\n          onPressSearch={() => onSearchComments()}\n        />\n        <label>\n          <input\n            type=\"checkbox\"\n            name=\"live search\"\n            value=\"liveSearch\"\n            checked={isLiveSearch}\n            onClick={() => onCheckLiveSearch()}\n          />\n          Enable live search\n        </label>\n      </div>\n      {searching ? (\n        filterComments?.length > 0 ? (\n          filterComments.map(renderComment)\n        ) : (\n          <h3>No comments found</h3>\n        )\n      ) : comments?.length > 0 ? (\n        comments.map(renderComment)\n      ) : (\n        <h3>No comments found</h3>\n      )}\n    </div>\n  );\n};\n\nexport default Details;\n","/Users/fadhilmi/Documents/ProgrammingProjects/rjs-frontend-test/src/components/Comment.js",["30","31"],"/Users/fadhilmi/Documents/ProgrammingProjects/rjs-frontend-test/src/components/Search.js",[],"/Users/fadhilmi/Documents/ProgrammingProjects/rjs-frontend-test/src/pages/Home/index.js",["32","33"],"import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Card from \"../../components/Card\";\nimport \"./index.css\";\n\nconst Home = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const getData = async () => {\n    try {\n      const promise = await fetch(`https://jsonplaceholder.typicode.com/posts`);\n      if (promise?.status === 200) {\n        const results = await promise.json();\n        setData(results);\n        setIsError(false);\n        setLoading(false);\n      }\n    } catch (error) {\n      setLoading(false);\n      setIsError(true);\n      console.log(\"App - getData() - error => \", error);\n    }\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getData();\n  }, []);\n\n  const renderItem = (item, index) => {\n    const { id, userId, body, title } = item;\n\n    return (\n      <div>\n        <Card id={id} title={title} body={body} />\n      </div>\n    );\n  };\n\n  const renderContent = () => {\n    if (loading) {\n      return <h1>Fetching Data ...</h1>;\n    }\n\n    if (isError) {\n      return <h1>Oops, something went wrong.</h1>;\n    }\n\n    if (data) {\n      return data.map(renderItem);\n    }\n  };\n  return (\n    <div className=\"home-body\">\n      <div className=\"header-wrapper\">\n        <h1 className=\"home-title\">COMMENTS MANAGER APP</h1>\n        <h3 className=\"home-subtitle\">Created by: Syed Ahmad Fadhil</h3>\n      </div>\n      <div className=\"content-body\">{renderContent()}</div>\n    </div>\n  );\n};\n\nexport default Home;\n",{"ruleId":"34","severity":1,"message":"35","line":1,"column":17,"nodeType":"36","messageId":"37","endLine":1,"endColumn":25},{"ruleId":"34","severity":1,"message":"38","line":2,"column":10,"nodeType":"36","messageId":"37","endLine":2,"endColumn":20},{"ruleId":"34","severity":1,"message":"39","line":11,"column":10,"nodeType":"36","messageId":"37","endLine":11,"endColumn":17},{"ruleId":"40","severity":1,"message":"41","line":64,"column":6,"nodeType":"42","endLine":64,"endColumn":10,"suggestions":"43"},{"ruleId":"40","severity":1,"message":"44","line":70,"column":6,"nodeType":"42","endLine":70,"endColumn":19,"suggestions":"45"},{"ruleId":"34","severity":1,"message":"46","line":94,"column":9,"nodeType":"36","messageId":"37","endLine":94,"endColumn":23},{"ruleId":"34","severity":1,"message":"47","line":1,"column":17,"nodeType":"36","messageId":"37","endLine":1,"endColumn":26},{"ruleId":"34","severity":1,"message":"35","line":1,"column":28,"nodeType":"36","messageId":"37","endLine":1,"endColumn":36},{"ruleId":"34","severity":1,"message":"38","line":2,"column":10,"nodeType":"36","messageId":"37","endLine":2,"endColumn":20},{"ruleId":"34","severity":1,"message":"48","line":33,"column":17,"nodeType":"36","messageId":"37","endLine":33,"endColumn":23},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getComments' and 'getData'. Either include them or remove the dependency array.","ArrayExpression",["49"],"React Hook useEffect has missing dependencies: 'isLiveSearch' and 'onSearchComments'. Either include them or remove the dependency array.",["50"],"'renderComments' is assigned a value but never used.","'useEffect' is defined but never used.","'userId' is assigned a value but never used.",{"desc":"51","fix":"52"},{"desc":"53","fix":"54"},"Update the dependencies array to be: [getComments, getData, id]",{"range":"55","text":"56"},"Update the dependencies array to be: [isLiveSearch, onSearchComments, searchValue]",{"range":"57","text":"58"},[1958,1962],"[getComments, getData, id]",[2047,2060],"[isLiveSearch, onSearchComments, searchValue]"]